import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";
import { getSession } from "@/lib/auth-utils"; // Utility ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á session

// GET /api/user-header
// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• User ‡πÅ‡∏•‡∏∞ Customer ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà
export async function GET() {
  // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• session ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà
  const session = await getSession();

  // 2. ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ session ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ user ‡πÉ‡∏´‡πâ return error
  if (!session?.user?.id) {
    return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
  }

  console.log("üîç Searching for user with userId:", session.user.id);

  try {
    // 3. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• User ‡∏û‡∏£‡πâ‡∏≠‡∏° role ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const user = await prisma.user.findUnique({
      where: {
        id: session.user.id,
      },
      select: {
        name: true,
        role: true,
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Customer profile ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô CUSTOMER
        customerProfile: {
          select: {
            domain: true,
          },
        },
      },
    });

    if (!user) {
      console.log("‚ùå No user found for userId:", session.user.id);
      return NextResponse.json({ error: "User not found" }, { status: 404 });
    }

    console.log("‚úÖ Found user:", user);

    // 4. ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° Role
    const headerData: {
      userName: string | null;
      userRole: string;
      domain: string | null;
    } = {
      userName: user.name,
      userRole: user.role,
      domain: null,
    };

    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô CUSTOMER ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• domain
    if (user.role === "CUSTOMER" && user.customerProfile) {
      headerData.domain = user.customerProfile.domain;
    } else if (user.role === "CUSTOMER" && !user.customerProfile) {
      // CUSTOMER ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ profile
      console.log("‚ö†Ô∏è Customer user without profile:", session.user.id);
      headerData.domain = "No domain assigned";
    }
    // ADMIN ‡∏´‡∏£‡∏∑‡∏≠ SEO_DEV ‡∏à‡∏∞‡∏°‡∏µ domain ‡πÄ‡∏õ‡πá‡∏ô null

    // 6. ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô JSON
    return NextResponse.json(headerData);
  } catch (error) {
    console.error("Failed to fetch user header data:", error);
    return NextResponse.json(
      { error: "Internal Server Error" },
      { status: 500 }
    );
  }
}
